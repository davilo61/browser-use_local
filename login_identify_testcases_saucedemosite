from langchain_openai import ChatOpenAI
from browser_use import Agent
import asyncio
from dotenv import load_dotenv
import os
import json
load_dotenv()

async def main():
    agent = Agent(
        task="Login to the https://www.saucedemo.com/v1/index.html with username standard_user and password secret_sauce, identify test cases and write to new file called results.txt",
        llm=ChatOpenAI(model="gpt-4o"),
    )
    result = await agent.run()
    
    # Print the result to understand its structure
    print(f"Result type: {type(result).__name__}")
    
    # Try to extract the final message that contains the test cases
    # Based on your log output, the result appears to be the final message text
    if result:
        try:
            # The final text is likely the result itself or its string representation
            final_text = str(result)
            
            # Extract just the test cases part if needed
            if "Test cases" in final_text:
                start_idx = final_text.find("Test cases")
                end_idx = final_text.find("Successfully completed") if "Successfully completed" in final_text else None
                test_cases_text = final_text[start_idx:end_idx].strip() if end_idx else final_text[start_idx:].strip()
            else:
                test_cases_text = final_text
            
            # Write to file with utf-8 encoding
            with open("results.txt", "w", encoding="utf-8") as f:
                f.write(test_cases_text)
                
            print(f"Test cases successfully written to: {os.path.abspath('results.txt')}")
            
        except Exception as e:
            print(f"Error writing results: {e}")
            # Fallback approach - write whatever we can get
            with open("results.txt", "w", encoding="utf-8") as f:
                f.write(str(result))
    else:
        print("No results were returned from the agent.")

asyncio.run(main())